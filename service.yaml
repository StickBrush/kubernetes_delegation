apiVersion: apps/v1
kind: Deployment
metadata:
  name: m-service #host name
  labels:
    app: m-service
  # namespace: receiver
spec:
  replicas: 2
  selector:
    matchLabels:
      app: m-service
  template:
    metadata:
      labels:
        app: m-service
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node
                    operator: In
                    values:
                      - "2" # Select nodes with label 'node=1' for the first replica
              - matchExpressions:
                  - key: node
                    operator: In
                    values:
                      - "3" # Select nodes with label 'node=2' for the second replica
      containers:
          - name: m-service-container
            image: busybox:latest
            # command: ["/bin/sh", "-c", "nc -lp 8080 | while read line; do echo 'Service 01 Received:' $line | nc -l -p 8080; done"]
            command: ["/bin/sh", "-c", "nc -k -lp 8080 -e echo 'HTTP/1.1 200 OK\nContent-Length:5\nContent-Type:text/plain\n\nHi01'"]
            # command: ["/bin/sh", "-c", "nc -lp 8080 | while read line; do echo -e 'HTTP/1.1 200 OK\nContent-Length:5\nContent-Type:text/plain\n\nHi 1' | nc -l -p 8080; done"]
            # command: ["/bin/sh", "-c", "nc -lp 8080 | while read line; do echo -e 'Hello' | nc -l -p 8080; done"]
            ports:
            - containerPort: 8080
      # nodeSelector:
      #   kubernetes.io/hostname: minikube-m02 # Specify the name of the node we target for

---
apiVersion: v1
kind: Service
metadata:
  name: test-service
  # namespace: receiver
spec:
  selector:
    app: m-service
  ports:
    - protocol: TCP
      name: m-service-port
      port: 8080
      targetPort: 8080